---
title: "Empowering the use of preprints in ecology and evolution: an exploration of the first 1000 *EcoEvoRxiv* preprints"
bibliography: ../bib/refs.bib
csl: ../bib/nature.csl
format:
  docx:
    reference-doc: ../bib/template.docx
editor_options: 
  chunk_output_type: console
execute:
  freeze: auto  # re-render only when source changes
  cache: false
  echo: false
  warning: false
  error: false
  include: true
crossref:
  fig-title: 'Figure'
  fig-labels: arabic
  title-delim: "-"
  fig-prefix: "Figure"
  tbl-prefix: "Table"
---

```{r, setup}
#| label: setup

# Load packages
#install.packages("pacman")
pacman::p_load(tidyverse, here, patchwork, readxl)

# Load in the data
  data <- read_xlsx(here("data", "20231003_EER_preprints_metadata.xlsx"))

# How many preprints?
  pr <- length(unique(data$`Preprint ID`))

# Dates preprints were published, range and graph
  dates <- range(data$`Published Date`)
```

Authors: Daniel W.A. Noble, Malgorzata Lagisz, Hackathon Participants, Shinichi Nakagawa

# Introduction

Publishing preprints -- papers communicating non-peer-reviewed research findings -- is now an entrenched practice across a multitude of scientific disciplines [@Ginsparg2011]. While preprint use in biology has had a slower uptake [@Berg2016], in ecology and evolution, new discipline specific preprint servers, such as *EcoEvoRxiv*, provide a means by which ecologists and evolutionary biologists can disseminate research findings. Such practices promote open science (e.g., ensuring papers are open access) and facilitate the rapid sharing of new discoveries that can have significant impacts on fundamental and applied knowledge globally (e.g., conservation outcomes). 

Preprints attempt to break down barriers to scientific publishing by: 1) increasing the speed, visibility and output of research findings; 2) encouraging constructive and critical feedback from a research community; 3) helping establish precedence of research findings; and 4) removing financial barriers to publication [e.g., @Proulx2013]. Importantly, *EcoEvoRxiv* is a community driven preprint server that has paved the way for new initiatives, including accepting multilingual preprints, recognising and accepting registered reports and non-traditional research reports, and promoting peer review and community discussion to improve the quality of preprints and speed up their peer-reviewed publication (e.g., Peer Community In -- PCI). 

Preprint servers, such as *EcoEvoRxiv*, can empower researchers to make their findings more accessible, open and transparent but only if they are used well. Significant barriers to preprint use still exist globally â€“ from lack of clarity around preprint policies at journals [@Klebel2020] to a stigma that preprints are viewed by a research community to be of poor quality [@Chiarelli2019] (but see [@Faser2022]). Nonetheless, we lack a systematic understanding of the factors that influence preprint use in ecology and evolution which can help inform future initiatives and allow us to begin to break down barriers to their use in our field. 

Here, we explore the first preprints uploaded to *EcoEvoRxiv* to understand preprint practices and use in our field, focusing our attention on understanding: 1) how long it takes for a preprint to become published, and how many preprints remain unpublished; 2) what countries make use of preprints; 3) how career stage and gender impact preprint use; 4) whether data and code are more likely to be shared in preprints; and 5) the extent to which authors make use of preprint servers for registered reports and community driven peer review. 

We downloaded metadata on the `r pr` preprints currently available on *EcoEvoRxiv* (as of the `r gsub("UTC", "", dates[2])`). 

```{r, figdates}
#| label: fig-figdates
#| fig-cap: Number of preprints publihsed on *EcoEvoRxiv* across the years.

ggplot(data, aes(x = `Published Date`)) +
  geom_histogram(fill = "grey", color = "black") +
  labs(x = "Published Date", y = "Number of preprints") +
  theme_bw() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

```

# References